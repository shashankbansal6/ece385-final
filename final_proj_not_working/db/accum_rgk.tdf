--altaccumulate CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48 CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" EXTRA_LATENCY=0 LPM_REPRESENTATION="SIGNED" WIDTH_IN=32 WIDTH_OUT=32 aclr clken clock data result
--VERSION_BEGIN 15.0 cbx_altaccumulate 2015:04:22:18:04:07:SJ cbx_cycloneii 2015:04:22:18:04:07:SJ cbx_lpm_add_sub 2015:04:22:18:04:07:SJ cbx_mgl 2015:04:22:18:06:50:SJ cbx_stratix 2015:04:22:18:04:08:SJ cbx_stratixii 2015:04:22:18:04:08:SJ  VERSION_END


-- Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus II License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.


FUNCTION cycloneive_lcell_comb (cin, dataa, datab, datac, datad)
WITH ( DONT_TOUCH, LUT_MASK, SUM_LUTC_INPUT)
RETURNS ( combout, cout);

--synthesis_resources = lut 32 reg 32 
SUBDESIGN accum_rgk
( 
	aclr	:	input;
	clken	:	input;
	clock	:	input;
	data[31..0]	:	input;
	result[31..0]	:	output;
) 
VARIABLE 
	acc_cella[31..0] : cycloneive_lcell_comb
		WITH (
			LUT_MASK = "96E8",
			SUM_LUTC_INPUT = "cin"
		);
	acc_ffa[31..0] : dffe;
	data_wire[31..0]	: WIRE;

BEGIN 
	acc_cella[].cin = ( acc_cella[30..0].cout, B"0");
	acc_cella[].dataa = acc_ffa[].q;
	acc_cella[].datab = data_wire[];
	acc_cella[].datad = B"11111111111111111111111111111111";
	acc_ffa[].clk = clock;
	acc_ffa[].clrn = (! aclr);
	acc_ffa[].d = acc_cella[].combout;
	acc_ffa[].ena = clken;
	data_wire[] = data[];
	result[] = acc_ffa[].q;
END;
--VALID FILE
