--alt_mac_out CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DATAA_WIDTH=32 OPERATION_MODE="OUTPUT_ONLY" OUTPUT_CLEAR="A_0" OUTPUT_CLOCK="A_0" OUTPUT_WIDTH=32 SIGNA_CLEAR="NONE" SIGNA_CLOCK="NONE" SIGNA_PIPELINE_CLEAR="NONE" SIGNA_PIPELINE_CLOCK="NONE" SIGNB_CLEAR="NONE" SIGNB_CLOCK="NONE" SIGNB_PIPELINE_CLEAR="NONE" SIGNB_PIPELINE_CLOCK="NONE" aclr clk dataa dataout ena signa signb
--VERSION_BEGIN 15.0 cbx_alt_mac_out 2015:04:22:18:04:07:SJ cbx_mgl 2015:04:22:18:06:50:SJ  VERSION_END


-- Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus II License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = reg 32 
SUBDESIGN mac_out_ig21
( 
	aclr[3..0]	:	input;
	clk[3..0]	:	input;
	dataa[31..0]	:	input;
	dataout[31..0]	:	output;
	ena[3..0]	:	input;
	signa	:	input;
	signb	:	input;
) 
VARIABLE 
	output_reg[31..0] : dffe;
	first_adder0_out[31..0]	: WIRE;

BEGIN 
	output_reg[].clk = clk[0..0];
	output_reg[].clrn = (! aclr[0..0]);
	output_reg[].d = first_adder0_out[];
	output_reg[].ena = ena[0..0];
	dataout[] = (output_reg[].q & (((signa # (! signa)) # signb) # (! signb)));
	first_adder0_out[31..0] = dataa[31..0];
END;
--VALID FILE
